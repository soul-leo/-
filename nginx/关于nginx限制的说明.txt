  在实际应用中，如果作为代理服务器，我们需要限制每个用户的请求速度和链接数量，但是，由于一个页面有多个子资源，如果毫无选择的都进行限制，那就会出现很多不必要的麻烦，如：一个页面有40个子资源，那么如果想让一个页面完整的显示，就需要将请求速度和连接数都调整到40，以此达到不阻塞用户正常请求，而这个限制，对服务器性能影响很大，几百用户就能把一台nginx的处理性能拉下来。
  所以我们需要制定哪些请求是需要进行限制的，如html页面；哪些是不需要限制的，如css、js、图片等，这样就需要通过配置对应的location进一步细化。
  我们一般不对css、js、gif、png，jpg等进行连接限制，而对除此之外的链接进行限制。

官方文档（http://nginx.org/en/docs/http/ngx_http_limit_req_module.html）

http {

  limit_conn_zone $binary_remote_addr zone=addr:10m;
  limit_req_zone $binary_remote_addr zone=one:10m rate=5r/s;
  ...

  server {
    ...

    location ~ .*\.(gif|png|css|js|icon)$ {
      proxy_set_header Host $http_host;
      proxy_set_header X-Real_IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location ~* .*\.(jpeg|jpg|JPG)$ {
      proxy_set_header Host $http_host;
      proxy_set_header X-Real_IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      #p_w_picpath_filter resize 480 -;
      #p_w_picpath_filter_jpeg_quality 50;
      #p_w_picpath_filter_sharpen 10;
      #p_w_picpath_filter_buffer 4M;

    }

    location / {
      proxy_set_header Host $http_host;
      proxy_set_header X-Real_IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      #limit
      limit_conn addr 3;
      limit_req zone=one burst=5;
    }

}




路径优先级 （与代码所在前后顺序无关，只与规则有关）
1. = /error.html
2. ^~ /images/
3. ~* \.(gif|jpg|jpeg|png|bmp|swf)$
4. /static/
5. /

解释：
1.表示完整匹配，用=和完全的路径匹配，比如 =/error.html 就匹配 error.html =/ 匹配根路径
2.表示开头等于，优先级第二,越长就越能匹配，比如^~ /abc/cd ^~/abc 第一个会优先匹配/abc/cd/xxx
3.表示不区分大小的正则，并且正则中含义是.jpg等结尾的，优先级第三，同样正则越长越高。
4.表示开头等于/static/的，但是优先级比第二种低，是一种其他配置找不到再找它，越长就越能匹配。
5.因为4说了是越长越能匹配，当能匹配/static/就不会匹配/,而/是所有其他的一个默认匹配。

特别补充比如：location ~* \.(gif|jpg|jpeg|png|bmp|swf)$ { //注意正则与其他符号要空格，其他一些配置也是如是。